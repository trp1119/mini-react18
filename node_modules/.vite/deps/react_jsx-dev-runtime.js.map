{
  "version": 3,
  "sources": ["../../../src/shared/ReactSymbols.js", "../../../src/shared/hasOwnProperty.js", "../../../src/react/src/jsx/ReactJSXElement.js"],
  "sourcesContent": ["export const REACT_ELEMENT_TYPE = Symbol.for('react.element')", "const { hasOwnProperty } = Object.prototype\n\nexport default hasOwnProperty", "\nimport { REACT_ELEMENT_TYPE } from 'shared/ReactSymbols'\nimport hasOwnProperty from 'shared/hasOwnProperty'\n\n// 不会放到 props 上的属性\nconst RESOLVED_PRPPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true,\n}\n\nfunction hasValidKey (config) {\n  return config.key !== undefined\n}\n\nfunction hasValidRef (config) {\n  return config.ref !== undefined\n}\n\n// 工厂函数\nfunction ReactElement(type, key, ref, props) {\n  return { // 虚拟DOM\n    $$typeof: REACT_ELEMENT_TYPE, // 表示此虚拟DOM 类型是一个 react 元素\n    type,\n    key,\n    ref,\n    props\n  }\n}\n\nexport function jsxDEV (type, config) {\n  let propName // 属性名\n  const props = {} // 属性对象\n  let key = null // 每个虚拟DOM 都有可选的 key，用于后续 diff\n  let ref = null // 引用，可以通过这个获取真实 DOM\n\n  if (hasValidKey(config)) {\n    key = config.key\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref\n  }\n\n  for (propName in config) {\n    // 拷贝自身属性，排除原型链属性\n    // call 避免原型污染\n    if (hasOwnProperty.call(config, propName) && !RESOLVED_PRPPS.hasOwnProperty(propName)) {\n      props[propName] = config[propName]\n    }\n  }\n\n  return ReactElement(type, key, ref, props)\n}"],
  "mappings": ";AAAO,IAAM,qBAAqB,OAAO,IAAI,eAAe;;;ACA5D,IAAM,EAAE,eAAe,IAAI,OAAO;AAElC,IAAO,yBAAQ;;;ACGf,IAAM,iBAAiB;AAAA,EACrB,KAAK;AAAA,EACL,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,UAAU;AACZ;AAEA,SAAS,YAAa,QAAQ;AAC5B,SAAO,OAAO,QAAQ;AACxB;AAEA,SAAS,YAAa,QAAQ;AAC5B,SAAO,OAAO,QAAQ;AACxB;AAGA,SAAS,aAAa,MAAM,KAAK,KAAK,OAAO;AAC3C,SAAO;AAAA;AAAA,IACL,UAAU;AAAA;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEO,SAAS,OAAQ,MAAM,QAAQ;AACpC,MAAI;AACJ,QAAM,QAAQ,CAAC;AACf,MAAI,MAAM;AACV,MAAI,MAAM;AAEV,MAAI,YAAY,MAAM,GAAG;AACvB,UAAM,OAAO;AAAA,EACf;AAEA,MAAI,YAAY,MAAM,GAAG;AACvB,UAAM,OAAO;AAAA,EACf;AAEA,OAAK,YAAY,QAAQ;AAGvB,QAAI,uBAAe,KAAK,QAAQ,QAAQ,KAAK,CAAC,eAAe,eAAe,QAAQ,GAAG;AACrF,YAAM,QAAQ,IAAI,OAAO,QAAQ;AAAA,IACnC;AAAA,EACF;AAEA,SAAO,aAAa,MAAM,KAAK,KAAK,KAAK;AAC3C;",
  "names": []
}
